@page "/docs/layout/container"
@layout DocLayout


<Title>容器(Container)</Title>
<Subtitle Size="Size.Size4">
    一个可以内容水平居中的简单容器
</Subtitle>
<hr>

<Content>
    <p>Container是一个简单的实用组件，可让您将内容集中在较大的视口上。 它可以在任何上下文中使用，但主要用作以下组件的子代：</p>
    <ol>
        <li>Navbar</li>
        <li>Hero</li>
        <li>Section</li>
        <li>Footer</li>
    </ol>
    <p>无论有多少列，他们的宽度将会 <strong>均分</strong>.</p>
</Content>

<Title Size="Size.Size4" IsSpaced>
    概述
</Title>
<Table IsBordered>
    <thead>
        <tr>
        </tr>
    </thead>
    <thead>
        <tr>
            <th class="bd-is-empty">
            </th>
            <th>
                Below
                <br>
                <code>1023px</code>
            </th>
            <th>
                Desktop
                <br>
                Between <code>1024px</code> and <code>1215px</code>
            </th>
            <th>
                Widescreen
                <br>
                Between <code>1216px</code> and <code>1407px</code>
            </th>
            <th>
                FullHD
                <br>
                <code>1408px</code> and above
            </th>
        </tr>
    </thead>

    <tbody>
        <tr>
            <th>属性</th>
            <th colspan="4" class="has-text-centered"><code>max-width</code></th>
        </tr>
    </tbody>
    <tbody>
        <tr>
            <td><code>--</code></td>
            <td class="has-text-grey-light has-background-white-ter">Full width</td>
            <td><code>960px</code></td>
            <td><code>1152px</code></td>
            <td><code>1344px</code></td>
        </tr>
        <tr>
            <td><code>IsWidescreen</code></td>
            <td colspan="2" class="has-text-grey-light has-background-white-ter">Full width</td>
            <td><code>1152px</code></td>
            <td><code>1344px</code></td>
        </tr>
        <tr>
            <td><code>IsFullhd</code></td>
            <td colspan="3" class="has-text-grey-light has-background-white-ter">Full width</td>
            <td><code>1344px</code></td>
        </tr>
        <tr>
            <td colspan="5">
                <div class="tags has-addons">
                    <span class="tag">New!</span>
                    <span class="tag is-success">0.9.1</span>
                </div>
            </td>
        </tr>
        <tr>
            <td><code>IsMaxDesktop</code></td>
            <td class="has-text-grey-light has-background-white-ter">Full width</td>
            <td colspan="3"><code>960px</code></td>
        </tr>
        <tr>
            <td><code>IsMaxWidescreen</code></td>
            <td class="has-text-grey-light has-background-white-ter">Full width</td>
            <td><code>960px</code></td>
            <td colspan="2"><code>1152px</code></td>
        </tr>
    </tbody>
</Table>

<hr>
<Title Size="Size.Size4" IsSpaced>
    默认行为
</Title>

<Content>
    <p>
        默认情况下，Container只会从 Desktop断点激活。 达到Widescreen和Fullhd断点后，它将增加其max-width。
    </p>
    <p>
        对于不同断点的容器宽度是: <code>$device - (2 * $gap)</code>. <code>$gap</code> 变量的值是 <code>32px</code> ，
        不过他是可以修改的(通过bulma.css)
    </p>
    <p>Container的表现形式是:</p>
    <ul>
        <li>
            <code>$desktop</code> 容器最大的宽度是 <strong>960px</strong>.
        </li>
        <li>
            <code>$widescreen</code> 容器最大的宽度是 <strong>1152px</strong>.
        </li>
        <li>
            <code>$fullhd</code> 容器最大的宽度是 <strong>1344px</strong>.
        </li>
    </ul>
    <p>之所以选择 960, 1152 和 1344 ，是因为他们能被 12 和 16 整除</p>

</Content>

<Container1 />
<HighLight FilePath="Pages/docs/layout/Container1.razor"></HighLight>
<hr>

<Title Size="Size.Size4" IsSpaced>
    仅宽屏或全高清
</Title>
<Content>
    <p>
        使用IsWidescreen和IsFullhd属性，可以使Container在$device断点没有达到指定宽度的时候呈现100%的宽度
    </p>
</Content>
<Container2 />
<HighLight FilePath="Pages/docs/layout/Container2.razor"></HighLight>
<hr>
<Container3 />
<HighLight FilePath="Pages/docs/layout/Container3.razor"></HighLight>
<hr>

<Title Size="Size.Size4" IsSpaced>
    Desktop and Widescreen maximum widths
</Title>
<Tags HasAddons>
    <Tag>New1</Tag>
    <Tag Color="Color.Success">0.9.1</Tag>
</Tags>
<Content>
    <p>
        有时候，你可能想在宽屏上要一个狭窄的Container，可以通过两个属性来控制：
    </p>
    <ul>
        <li>
            <code>IsMaxDesktop</code> 行为表现为Desktop下的Container
        </li>
        <li>
            <code>IsMaxWidescreen</code> 行为表现为Widescreen下的Container
        </li>
    </ul>
</Content>
<Container4 />
<HighLight FilePath="Pages/docs/layout/Container4.razor"></HighLight>
<hr>
<Container5 />
<HighLight FilePath="Pages/docs/layout/Container5.razor"></HighLight>
<hr>

<Title Size="Size.Size4" IsSpaced>
    Fluid container
</Title>
<Content>
    <p>
        如果您不希望有最大宽度，但想在左侧和右侧保持32px的空白，请添加IsFluid属性：
    </p>
</Content>
<Container6 />
<HighLight FilePath="Pages/docs/layout/Container6.razor"></HighLight>
