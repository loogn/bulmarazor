
@namespace BulmaRazor.Components

@inherits BulmaComponentBase
@typeparam TValue

<label @attributes="Attributes" class="@classes">
    <input disabled="@Disabled" type="checkbox" value="@Value" checked="@Checked" @onchange="ChangeHandle" />
    @ChildContent
</label>
@code {

    string classes => CssBuilder.Default("checkbox")
        .AddClassFromAttributes(Attributes)
        .Build();


    [Parameter]
    public bool Checked { get; set; }
    [Parameter]
    public EventCallback<bool> CheckedChanged { get; set; }


    private async Task ChangeHandle(ChangeEventArgs e)
    {
        Checked = !Checked;
        if (Parent != null)
        {
            await Parent.CheckTagger(Checked, Value);
        }

        if (CheckedChanged.HasDelegate)
        {
            await CheckedChanged.InvokeAsync(Checked);
        }
    }

    public void SetChecked(bool ck)
    {
        Checked = ck;
    }

    [Parameter]
    public TValue Value { get; set; }

    [Parameter]
    public bool Disabled { get; set; }


    [CascadingParameter]
    public CheckBoxes<TValue> Parent { get; set; }

    public int Index { get; set; }
    protected override void OnInitialized()
    {
        base.OnInitialized();
        if (Parent != null)
        {
            Parent.AddItem(this);
            if (Parent.Values!=null && Parent.Values.Contains(Value))
            {
                Checked = true;
            }
        }
    }

    [Parameter]
    public RenderFragment ChildContent { get; set; }
}
