
@namespace BulmaRazor.Components

@inherits BulmaComponentBase


<textarea @attributes="Attributes"
          @bind-value="@CurrentValue" @bind-value:event="@BindEvent"
          class="@classes">
</textarea>


@code {


    string classes => CssBuilder.Default("textarea")
        .AddClass(Color.Value, Color.Value)
        .AddClass(Size.Value, Size.Value)
        .AddClass("is-hovered", IsHovered)
        .AddClass("is-focused", IsFocused)
        .AddClass("has-fixed-size", FixedSize)
        .Build();


    [Parameter]
    public Color Color { get; set; } = Color.Default;

    [Parameter]
    public Size Size { get; set; } = Size.Default;


    [Parameter]
    public bool IsHovered { get; set; }

    [Parameter]
    public bool IsFocused { get; set; }

    [Parameter]
    public bool Disabled { get; set; }


    [Parameter]
    public bool Readonly { get; set; }

    [Parameter]
    public bool IsLoading { get; set; }

    [Parameter]
    public bool FixedSize { get; set; }


    [Parameter]
    public string BindEvent { get; set; } = "onchange";

    [Parameter]
    public string Value { get; set; }


    private string _value;

    private string CurrentValue
    {
        get { return _value; }
        set
        {
            _value = value;
            if (ValueChanged.HasDelegate)
            {
                ValueChanged.InvokeAsync(_value).GetAwaiter().GetResult();
            }
        }
    }

    [Parameter]
    public EventCallback<string> ValueChanged { get; set; }


    public async override Task SetParametersAsync(ParameterView parameters)
    {
        await base.SetParametersAsync(parameters);
        _value = Value;
    }

}
