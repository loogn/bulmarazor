@namespace BulmaRazor.Components

@inherits BulmaComponentBase
@typeparam TValue

<div class="@selectCls">
    <select @attributes="AdditionalAttributes"
            @bind="@CurrentValue">
        <option onselect=""></option>
        @ChildContent
        
        
    </select>
</div>



@code {


    string selectCls => CssBuilder.Default("select")
        .AddClass("is-multiple", multiple)
        .AddClass("is-rounded", IsRounded)
         .AddClass("is-hovered", IsHovered)
        .AddClass("is-focused", IsFocused)
        .AddClass("is-loading", IsLoading)
        .AddClass(Color.Value, Color.Value)
        .AddClass(Size.Value, Size.Value)
        .Build();



    private bool multiple;





    [Parameter]
    public IList<SelectItem<TValue>> Items { get; set; }

    [Parameter]
    public Color Color { get; set; } = Color.Default;

    [Parameter]
    public Size Size { get; set; } = Size.Default;


    [Parameter]
    public bool IsHovered { get; set; }

    [Parameter]
    public bool IsFocused { get; set; }

    [Parameter]
    public bool Disabled { get; set; }

    [Parameter]
    public bool IsLoading { get; set; }

    [Parameter]
    public bool IsRounded { get; set; }



    [Parameter]
    public RenderFragment ChildContent { get; set; }


    [Parameter]
    public TValue Value { get; set; }


    private TValue _value;

    private TValue CurrentValue
    {
        get { return _value; }
        set
        {
            _value = value;

            if (ValueChanged.HasDelegate)
            {
                ValueChanged.InvokeAsync(_value).GetAwaiter().GetResult();
            }
        }
    }

    [Parameter]
    public EventCallback<TValue> ValueChanged { get; set; }


    //[Parameter]

    //public EventCallback<TValue> OnSelectChanged { get; set; }

    public async override Task SetParametersAsync(ParameterView parameters)
    {
        await base.SetParametersAsync(parameters);
        if (AdditionalAttributes != null)
        {
            multiple = AdditionalAttributes.ContainsKey("multiple");
        }

        _value = Value;
    }

}
