
@namespace BulmaRazor.Components

@inherits BulmaComponentBase
@typeparam TValue


<input @attributes="AdditionalAttributes" @bind-value="@CurrentValue" @bind-value:event="@BindEvent" class="@classes" />

@code {


    string classes => CssBuilder.Default("input")
        .AddClassFromAttributes(AdditionalAttributes)
        .AddClass(Color.Value, Color.Value)
        .AddClass(Size.Value, Size.Value)
        .AddClass("is-rounded", IsRounded)
        .AddClass("is-hovered", IsHovered)
        .AddClass("is-focused", IsFocused)
        .AddClass("is-loading", IsLoading)
        .AddClass("is-static", Static)
        .Build();

    [Parameter]
    public Color Color { get; set; } = Color.Default;

    [Parameter]
    public Size Size { get; set; } = Size.Default;

    [Parameter]
    public bool IsHovered { get; set; }

    [Parameter]
    public bool IsFocused { get; set; }


    [Parameter]
    public bool IsLoading { get; set; }

    [Parameter]
    public bool IsRounded { get; set; }

    [Parameter]
    public bool Static { get; set; }



    [Parameter]
    public string BindEvent { get; set; } = "onchange";

    [Parameter]
    public TValue Value { get; set; }


    private TValue _value;

    private TValue CurrentValue
    {
        get { return _value; }
        set
        {
            _value = value;
            if (ValueChanged.HasDelegate)
            {
                ValueChanged.InvokeAsync(_value).GetAwaiter().GetResult();
            }
        }
    }

    [Parameter]
    public EventCallback<TValue> ValueChanged { get; set; }

    public async override Task SetParametersAsync(ParameterView parameters)
    {
        if (typeof(TValue).IsNumber())
        {
            if (AdditionalAttributes == null)
            {
                AdditionalAttributes = new Dictionary<string, object>();
            }
            if (!AdditionalAttributes.ContainsKey("type"))
            {
                AdditionalAttributes.Add("type", "number");
            }
        }

        await base.SetParametersAsync(parameters);
        _value = Value;
    }
}
