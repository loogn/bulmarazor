@namespace BulmaRazor.Components
@inherits BulmaComponentBase
@inject BulmaRazorJsInterop JsInterop
@typeparam TItem
<div class="columns m-4 is-gapless">
    <div class="column is-flex is-flex-direction-column">
        <nav class="panel is-flex-grow-1 is-flex is-flex-direction-column">
            <p class="panel-heading is-flex is-align-items-center m-0" style="font-size: unset;font-weight: unset;">
                <label class="is-flex-grow-1" style="overflow: hidden;text-overflow: ellipsis;word-break: keep-all">
                    <input type="checkbox" class="mr-1" checked="@leftAll" @ref="leftCk" @onchange="() => CheckAll(1, !leftAll)"/>
                    @LeftTitle
                </label>
                <span class="is-flex-shrink-0 has-text-grey">
                    @leftCount/@leftView.Count
                </span>
            </p>
           @if (Filterable)
           {
               <div class="panel-block">
                   <div class="control has-icons-left">
                       <input type="text" @bind="leftWord" @bind:event="oninput" @onkeyup="() => leftWordChange()" placeholder="@FilterPlaceholder" class="input"/>
                       <span class="icon is-left">
                           <i class="fa fa-search" aria-hidden="true"></i>
                       </span>
                   </div>
               </div>
           }
           <div class="panel-block is-flex-grow-1 is-align-items-flex-start">
               <ul style="@ulStyle">
                   @foreach (var item in leftView)
                   {
                       <li class="@B.Join(B.MB2, item.IsHidden? B.Hidden:"")">
                       <label>
                           <input type="checkbox" class="mr-1" checked="@item.IsChecked" @onchange="() => ItemCheckChange(item)"/>
                           @item.ShowValue
                       </label>
                        </li>
                   }
               </ul>
           </div>
           @if (LeftFooterSlot != null)
           {
               <div class="panel-block">@LeftFooterSlot</div>
           }
            
        </nav>

    </div>
    <div class="column is-flex is-flex-direction-column is-align-items-center is-justify-content-center">
        <div class="buttons is-flex">
            <button class="button is-link" disabled="@(rightCount == 0)" @onclick="() => Trans(rightView, leftView)">
                <span class="icon">
                    <i class="fa fa-angle-left"></i>
                </span>
                @if(LeftButtonText.HasValue()){
                    <span>@LeftButtonText</span>
                }
            </button>
            <button class="button is-link" disabled="@(leftCount == 0)" @onclick="() => Trans(leftView, rightView)">
                @if(RightButtonText.HasValue()){
                    <span>@RightButtonText</span>
                }
                <span class="icon">
                    <i class="fa fa-angle-right"></i>
                </span>
            </button>
        </div>
    </div>
    <div class="column is-flex is-flex-direction-column">
        <nav class="panel is-flex-grow-1 is-flex is-flex-direction-column">
            <p class="panel-heading is-flex is-align-items-center m-0" style="font-size: unset;font-weight: unset;">

                <label class="is-flex-grow-1" style="overflow: hidden;text-overflow: ellipsis;word-break: keep-all">
                    <input type="checkbox" class="mr-1" checked="@rightAll" @ref="rightCk" @onchange="() => CheckAll(2, !rightAll)"/>
                    @RightTitle
                </label>
                <span class="is-flex-shrink-0 has-text-grey">
                    @rightCount/@rightView.Count
                </span>
            </p>
            @if (Filterable)
            {
                <div class="panel-block">
                    <div class="control has-icons-left">
                        <input type="text" @bind="rightWord" @bind:event="oninput" @onkeyup="() => rightWordChange()" placeholder="@FilterPlaceholder" class="input"/>
                        <span class="icon is-left">
                            <i class="fa fa-search" aria-hidden="true"></i>
                        </span>
                    </div>
                </div>
            }
            <div class="panel-block is-flex-grow-1  is-align-items-flex-start">
                <ul style="@ulStyle">
                    @foreach (var item in rightView)
                    {
                        <li class="@B.Join(B.MB2, item.IsHidden? B.Hidden:"")">
                        <label>
                            <input class="mr-1" type="checkbox" checked="@item.IsChecked" @onchange="() => ItemCheckChange(item)"/>
                            @item.ShowValue
                        </label>
                        </li>
                    }
                </ul>
            </div>
            @if (RightFooterSlot != null)
           {
               <div class="panel-block">@RightFooterSlot</div>
           }
        </nav>
    </div>
</div>
