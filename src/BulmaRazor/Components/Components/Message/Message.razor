@namespace BulmaRazor.Components

@inherits BulmaComponentBase
@if (!isRemoved)
{
    <article @attributes="Attributes" class="@classes">
        @if (HeaderText.HasValue())
        {
            <div class="message-header">
                <p>@HeaderText</p>
                @if (Removable)
                {
                    <button class="@deleteClass" aria-label="delete" @onclick="Remove"></button>
                }
            </div>
        }
        <div class="message-body">
            @ChildContent
        </div>
    </article>
}

@code{

    string classes => CssBuilder.Default("message")
        .AddClassFromAttributes(Attributes)
        .AddClass(Color.Value, Color.Value)
        .AddClass("is-small", IsSmall)
        .AddClass("is-medium", IsMedium)
        .AddClass("is-large", IsLarge)
        .Build();

    string deleteClass => CssBuilder.Default("delete")
        .AddClass("is-small", IsSmall)
        .AddClass("is-medium", IsMedium)
        .AddClass("is-large", IsLarge)
        .Build();

    

    [Parameter]
    public string HeaderText { get; set; }

    

    [Parameter]
    public Color Color { get; set; } = Color.Default;


    [Parameter]
    public bool IsSmall { get; set; }

    [Parameter]
    public bool IsMedium { get; set; }

    [Parameter]
    public bool IsLarge { get; set; }

    [Parameter]
    public bool Removable { get; set; }

    [Parameter]
    public Action OnRemove { get; set; }

    private bool isRemoved { get; set; }

    public void Remove()
    {
        isRemoved = true;
        OnRemove?.Invoke();
    }

    [Parameter]
    public RenderFragment ChildContent { get; set; }

}