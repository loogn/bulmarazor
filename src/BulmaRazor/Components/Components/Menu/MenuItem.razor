@namespace BulmaRazor.Components
@inherits BulmaComponentBase



<li @attributes="AdditionalAttributes">
    <a @attributes="AddAtts" class='@classes' @onclick="e=>HandleClick()">
        @ChildContent
    </a>

    @if (NestedSlot != null)
    {
        @:@NestedSlot
    }
</li>

@code{
    string classes => CssBuilder.Default("")
        .AddClassFromAttributes(AdditionalAttributes)
        .AddClass("is-active", IsActive)
        .Build();

    [Parameter]
    public bool IsActive { get; set; }

    private Dictionary<string, object> AddAtts = new Dictionary<string, object>();

    [Parameter]
    public string Href { get; set; }
    [Parameter]
    public string Target { get; set; }

    public void Active(bool isActive)
    {
        if (isActive != IsActive)
        {
            IsActive = isActive;
            StateHasChanged();
        }

    }

    private Task HandleClick()
    {
        if (Parent != null)
        {
            return Parent.ClickItem(this);
        }
        return Task.CompletedTask;
    }

    public int Index { get; set; }

    [CascadingParameter]
    public Menu Parent { get; set; }


    [Parameter]
    public RenderFragment ChildContent { get; set; }

    [Parameter]
    public RenderFragment NestedSlot { get; set; }

    protected override void OnInitialized()
    {
        base.OnInitialized();
        //º”»Î∏∏¿‡
        if (Parent != null)
        {
            Parent.AddItem(this);
        }

        if (Href.HasValue())
        {
            AddAtts.Add("href", Href);
        }
        if (Target.HasValue())
        {
            AddAtts.Add("target", Target);
        }
    }
}