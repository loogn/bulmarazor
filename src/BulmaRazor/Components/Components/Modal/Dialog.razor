@namespace BulmaRazor.Components

@inherits BulmaComponentBase

<div @attributes="Attributes" class="@classes">
    <div class="modal-background" @onclick="backgroundClickHandle"></div>
    <div class="modal-card">
        <header class="modal-card-head">
            <p class="modal-card-title">@HeaderText</p>
            @if (ShowClose)
            {
                <button class="delete" aria-label="close" @onclick="Close"></button>
            }
        </header>
        <section class="modal-card-body">
            @BodySlot
        </section>
        <footer class="modal-card-foot">
            @FootSlot
        </footer>
    </div>
</div>

@code{

    string classes => CssBuilder.Default("modal")
        .AddClassFromAttributes(Attributes)
        .AddClass("is-active", IsActive)
        .Build();
    

    public void Alert(string msg)
    {
        IsActive = true;
        BodySlot = builder =>
        {
            builder.AddContent(0, 
                @<IconText>
                    <Icon IconClass="fa fa-info-circle"></Icon>
                    <span>@msg</span>
                </IconText>
                );
            
        };
        StateHasChanged();
    }


    [Parameter]
    public string HeaderText { get; set; }

    [Parameter]
    public bool IsActive { get; set; }


    [Parameter]
    public bool CloseOnClickBackground { get; set; } = false;

    private void backgroundClickHandle()
    {
        if (CloseOnClickBackground)
        {
            Close();
        }
    }

    [Parameter]
    public bool ShowClose { get; set; } = true;


    [Parameter]
    public EventCallback OnClose { get; set; }

    public Task Close()
    {
        IsActive = false;
        return OnClose.InvokeAsync();
    }

    public void Show()
    {
        IsActive = true;
        StateHasChanged();
    }

    [Parameter]
    public RenderFragment BodySlot { get; set; }

    [Parameter]
    public RenderFragment FootSlot { get; set; }

}